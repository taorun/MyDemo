{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string"
    },
    "hostingPlanName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Free"
    },
    "repoUrl": {
      "type": "string"
    },
    "branch": {
      "type": "string",
      "defaultValue": "master"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "adUserId": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    }
  },
  "variables": {
    "apiSiteName": "[concat(parameters('siteName'), 'Api')]"
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "sku": {
        "name": "F1"
      },
      "properties": {
        "reserved": false
      }
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "/subscriptions/cc7d0292-541f-44e0-91a9-d6bcbd6f3804/resourcegroups/vsdeploy/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ryankeyvaultidentity": {}
        }
      },
      "properties": {
        "serverFarmId": "[parameters('hostingPlanName')]"
      },
      "resources": [
        /*{
          "condition": "[contains(parameters('repoUrl'),'http')]",
          "apiVersion": "2020-06-01",
          "name": "web",
          "type": "sourcecontrols",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
          ],
          "properties": {
            "repoUrl": "[parameters('repoUrl')]",
            "branch": "[parameters('branch')]",
            "isManualIntegration": false
          }
        },*/
        {
          "apiVersion": "2020-06-01",
          "name": "appsettings",
          "type": "config",
          "kind": "string",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
            //"[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('siteName'), 'web')]"
          ],
          "properties": {
            "key1": "value1",
            "key2": "value2",
            "key3_from_keyvault": "@Microsoft.KeyVault(SecretUri=https://ryandeploykeyvault.vault.azure.net/secrets/mykeyvaultkey/db93846c7c064a9ea0f5bb4e4822b3d4)"
          }
        },
        {
          "apiVersion": "2020-06-01",
          "name": "connectionstrings",
          "type": "config",
          "kind": "string",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
            //"[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('siteName'), 'web')]"
          ],
          "properties": {
            "MySqlServerDB": {
              "value": "Server=tcp: myfakesqldb,1433;Initial Catalog=mydb;User Id= myuser@mysqlserver;Password=pwd;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;MultipleActiveResultSets=True",
              "type": "SQLAzure"
            }
          }
        }
      ]
    }
    /*{
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "accessPolicies": [
          {
            "objectId": "[parameters('adUserId')]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          }
        ],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    }*/
  ],
  "outputs": {
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
    }
  }
}